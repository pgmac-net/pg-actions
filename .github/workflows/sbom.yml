name: SBOM Generator

# This is a start on somb SBoM scanning and attestation.
# There are 2 pieces to this right now:
# 1. Generate a CycloneDX SBoM and upload it to Dependency Track
# 2. Generate an SPDX SBoM and scan it with grype, uploading the results to the Security tab as a SARIF report

# It's designed to be called from a workflow_dispatch or a workflow_call event, but can be triggered by a push to the main or master branch.
# I haven't testing calling from an external organisation workflows yet, the scanning should work, but the attestation may not.

# It's running on a self-hosted runner. You'll need to have one of those setup, running and tagged with 'self-hsoted' for this to work.

# Because I'm using the free-tier of GitHub, I only have access to GHAS for public repositories, so the attestation and SARIF upload is only done for public repositories.

on:
  push:
    branches: ["master", "main"]

  workflow_dispatch:
  workflow_call:

jobs:
  DepTrack-sbom:
    runs-on: self-hosted
    permissions:
      id-token: write
      attestations: write
      actions: read
      contents: write
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Build the CycloneDX SBoM for this directory
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: cyclonedx-json
          output-file: sbom.json
          artifact-name: sbom.json
          upload-artifact: true
          dependency-snapshot: true

      - name: Build the SHA256 digest
        id: sha256
        run: |
          echo "sha256=sha256:$(sha256sum sbom.json | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Attest the SBoM
        if: github.event.repository.visibility == 'public'
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: sbom.json
          subject-digest: ${{ steps.sha256.outputs.sha256 }}
          show-summary: true
          push-to-registry: false

      - name: Upload SBoM to Dependency Track
        uses: DependencyTrack/gh-upload-sbom@v3
        with:
          serverhostname: "${{ secrets.DT_HOST }}"
          apikey: ${{ secrets.DT_APIKEY }}
          projectname: ${{ github.repository }}
          projectversion: ${{ github.sha }}
          projecttags: ${{ github.repository }}, ${{ github.ref_type }}, ${{ github.ref}}
          bomfilename: "sbom.json"
          autocreate: true

  GHAS-dependency-scan:
    runs-on: self-hosted
    needs: [DepTrack-sbom]
    permissions:
      id-token: write
      attestations: write
      actions: read
      contents: write
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
          name: sbom.json
          merge-multiple: false

      - name: Verify the artefact attestation
        if: github.event.repository.visibility == 'public'
        run: gh attestation verify ./sbom.json --owner ${{ github.repository_owner }}
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Scan the SBoM for vulnerabilities # The grype SBoM scan only scans SPDX format SBoMs
        uses: anchore/scan-action@v6
        id: scan
        with:
          sbom: sbom.json
          fail-build: false # Reporting only mode for now - change to true to fail the build
          #severity-cutoff: "medium" # Only fail the build if a vulnerability of this severity or higher is found
          only-fixed: true # Only report vulnerabilities that have a fix available
          output-format: sarif

      - name: Upload SBoM scan SARIF report
        # Free-tier GHAS only works on public repositories
        if: github.event.repository.visibility == 'public'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
