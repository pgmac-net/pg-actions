name: SBOM Generator

on:
  push:
    branches: ["master", "main"]

  workflow_dispatch:
    inputs:
      deptrack:
        type: boolean
        description: Send the SBOM to Dependency Track
        required: true
        default: true
      ghas:
        type: boolean
        description: Send the dependency vulnerability scan results to GHAS
        required: true
        default: false
      cyclonedx:
        type: boolean
        description: Build a CycloneDX SBOM artefact
        required: true
        default: true
      spdx:
        type: boolean
        description: BUild a SPDX SBOM artefact
        required: true
        default: true

  workflow_call:
    inputs:
      cyclonedx:
        type: boolean
        description: Build the CycloneDX SBoM artefact
        required: true
        default: true
      spdx:
        type: boolean
        description: Build the SPDX SBoM artefact
        required: true
        default: true
      deptrack:
        type: boolean
        description: Send the CycloneDX SBoM to Dependency Track
        required: true
        default: true
      ghas:
        type: boolean
        description: Send the dependency vulnerability scan results to GHAS
        required: true
        default: false

jobs:
  DepTrack-sbom:
    runs-on: self-hosted
    permissions:
      id-token: write
      attestations: write
      actions: read
      contents: write
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Build the CycloneDX SBoM for this directory
        if: ${{ inputs.cyclonedx || true }} or ${{ inputs.deptrack || true }}
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: cyclonedx-json
          output-file: sbom.json
          artifact-name: sbom.json
          upload-artifact: true
          dependency-snapshot: true

      - name: Upload SBoM to Dependency Track
        if: ${{ inputs.deptrack || true }}
        uses: DependencyTrack/gh-upload-sbom@v3
        with:
          serverHostname: '${{ secrets.DT_HOST }}'
          apiKey: ${{ secrets.DT_APIKEY }}
          projectName: ${{ github.repository }}
          projectVersion: ${{ github.sha }}
          projectTags: "${{ github.repository }}, ${{ github.ref_type || 'N/A' }}, ${{ github.ref_name || 'N/A' }}"
          bomFilename: "sbom.json"
          autoCreate: true

      - name: Build the SHA256 digest
        if: ${{ inputs.cyclonedx || true }} or ${{ inputs.deptrack || true }}
        id: sha256
        run: |
          echo "sha256=sha256:$(sha256sum sbom.json | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Attest the SBoM
        if: ${{ github.event.repository.visibility == 'public' }} and ( ${{ inputs.cyclonedx || true }} or ${{ inputs.deptrack || true }} )
        uses: actions/attest-build-provenance@v2
        with:
          #subject-path: sbom.json
          subject-name: sbom.json
          subject-digest: ${{ steps.sha256.outputs.sha256 }}
          show-summary: true
          push-to-registry: false

  GHAS-scan:
    runs-on: self-hosted
    permissions:
      id-token: write
      attestations: write
      actions: read
      contents: write
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Build the SPDX SBoM for this directory for later grype scans
        if: ${{ inputs.spdx || true }} or ${{ inputs.ghas || false }}
        uses: anchore/sbom-action@v0
        id: spdx-scan
        with:
          path: ./
          format: spdx-json
          output-file: sbom-spdx.json
          artifact-name: sbom-spdx.json
          upload-artifact: true
          dependency-snapshot: true

      - name: Build the SHA256 digest
        if: ${{ inputs.spdx || true }} or ${{ inputs.ghas || false }}
        id: spdx-sha256
        run: |
          echo "sha256=sha256:$(sha256sum sbom-spdx.json | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Attest the SBoM
        if: ${{ github.event.repository.visibility == 'public' }} and ( ${{ inputs.spdx || true }} or ${{ inputs.ghas || false }} )
        uses: actions/attest-build-provenance@v2
        with:
          #subject-path: sbom.json
          subject-name: sbom-spdx.json
          subject-digest: ${{ steps.spdx-sha256.outputs.sha256 }}
          show-summary: true
          push-to-registry: false

      - name: Scan the SPDX SBoM for vulnerabilities # The grype SBoM scan only scans SPDX format SBoMs
        if: ${{ inputs.spdx || true }} or ${{ inputs.ghas || false }}
        uses: anchore/scan-action@v6
        id: scan
        with:
          sbom: sbom-spdx.json
          fail-build: false # Reporting only mode for now - change to true to fail the build
          #severity-cutoff: "medium" # Only fail the build if a vulnerability of this severity or higher is found
          only-fixed: true # Only report vulnerabilities that have a fix available
          output-format: sarif

      - name: Upload SPDX SBoM scan SARIF report
        if: ${{ github.event.repository.visibility == 'public' }} and ${{ inputs.ghas || false }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  sbom-scan:
    runs-on: self-hosted
    permissions:
      id-token: write
      attestations: read
      actions: read
      contents: read
    needs: [GHAS-scan]
    steps:
      - name: Download the SPDX SBoM Artefact
        if: ${{ inputs.spdx || true }} or ${{ inputs.ghas || false }}
        uses: actions/download-artifact@v4.1.8
        with:
          # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
          name: sbom-spdx.json
          merge-multiple: false

      - name: Verify the artefact attestation
        if: ${{ github.event.repository.visibility == 'public' }} and ( ${{ inputs.spdx || true }} or ${{ inputs.ghas || false }} )
        run: gh attestation verify ./sbom-spdx.json --owner ${{ github.repository_owner }}
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Scan the SBoM
        if: ${{ inputs.spdx || true }} or ${{ inputs.ghas || false }}
        uses: anchore/scan-action@v6
        with:
          sbom: sbom-spdx.json
          fail-build: false # Reporting only mode for now - change to true to fail the build
          only-fixed: true # Only report vulnerabilities that have a fix available
          output-format: table
